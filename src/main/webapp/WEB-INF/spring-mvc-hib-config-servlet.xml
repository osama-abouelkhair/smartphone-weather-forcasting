<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

	<!-- Add support for component scanning -->
	<context:component-scan base-package="testweatherapp" />

	<!-- Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven />


	<!-- Define Spring MVC view resolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/view/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>

	<bean id="templateResolver"
		class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/view/" />
		<property name="suffix" value=".jsp" />
		<property name="templateMode" value="HTML" />
	</bean>

	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
	</bean>

	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="order" value="1" />
		<property name="viewNames" value="*,*.jsp,*.xhtml" />
	</bean>

	<jdbc:embedded-database id="dataSource" type="H2">
		<jdbc:script location="/sql/schema.sql" />
	</jdbc:embedded-database>

	<!-- Step 1: Define Database DataSource / connection pool <bean id="dataSource" 
		class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"> 
		<property name="driverClass" value="com.mysql.jdbc.Driver" /> <property name="jdbcUrl" 
		value="jdbc:mysql://google/SWF_DB?useSSL=false&socketFactory=com.google.cloud.sql.mysql.SocketFactory" 
		/> <property name="cloudSqlInstance" value="instance-1" /> <property name="user" 
		value="root" /> <property name="password" value="qubit1909" /> <property 
		name="driverClass" value="com.mysql.jdbc.GoogleDriver"/> these are connection 
		pool properties for C3P0 <property name="minPoolSize" value="5" /> <property 
		name="maxPoolSize" value="20" /> <property name="maxIdleTime" value="30000" 
		/> </bean> -->
	<!-- Step 2: Setup Hibernate session factory <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> <property name="packagesToScan" 
		value="com.smartphone.weather.forecasting.entity" /> <property name="hibernateProperties"> 
		<props> <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> 
		<prop key="hibernate.show_sql">true</prop> </props> </property> </bean> -->

	<!-- Step 3: Setup Hibernate transaction manager <bean id="myTransactionManager" 
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"> <property 
		name="sessionFactory" ref="sessionFactory" /> </bean> -->

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="emf" />
	</bean>

	<!-- Step 4: Enable configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="packagesToScan" value="testweatherapp.entity" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">10</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>

	</bean>

</beans>





